version: '3.8'

services:
  # Main API service
  atlas-api:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm64  # Native Apple Silicon
        - linux/amd64  # x86 compatibility
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://atlas:atlas_password@postgres:5432/atlas_atc
      - REDIS_URL=redis://redis:6379
      - DEVICE=cpu  # Use CPU in container
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./results:/app/results
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Streamlit dashboard
  atlas-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      platforms:
        - linux/arm64
        - linux/amd64
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://atlas-api:8000
      - PYTHONPATH=/app
    depends_on:
      - atlas-api
    volumes:
      - ./results:/app/results
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas_password
      - POSTGRES_DB=atlas_atc
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atlas -d atlas_atc"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: